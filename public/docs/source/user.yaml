swagger: '2.0'
info:
  description: >-
    This is a sample server Petstore server.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).      For this sample, you can use the api
    key `special-key` to test the authorization     filters.
  version: 1.0.0
  title: Rorean Developer API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: leykamthong@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: '128.199.88.174:3333'
basePath: /api/v1
tags:
  - name: auth
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - http
  - https
paths:
  /auth/login:
    put:
      tags:
        - auth
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: access_token
          in: query
          description: The token is required.
          required: true
          type: string
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            type: object
            properties:
              telephone:
                type: string
              password:
                type: string
            example:   # Sample object
              telephone: "855-069665533"
              password: "12345"
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
        '202':
          description: Invalid username/password supplied
        '404':
          description: Not found
        '500':
          description: Internal Server Error
  /auth/logout:
    get:
      tags:
        - auth
      summary: Logs out current logged in user session (Not working...)
      description: 'not yet implement'
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      responses:
        default:
          description: Successful operation
  /auth/register:
    post:
      tags:
        - auth
      summary: Create user
      description: Register a new account for normal users.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - name: access_token
          in: query
          description: The token is required.
          required: true
          type: string
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Not found
        '500':
          description: Internal Server Error
  /user:
    get:
      tags:
        - user
      summary: Get user by status
      description: ''
      operationId: getUserByStatus
      produces:
        - application/json
      parameters:
        - name: access_token
          in: query
          description: The token is required.
          required: true
          type: string
        - name: status
          in: query
          description: Status values that need to be considered for condition
          required: true
          type: array
          items:
            type: string
            enum:
              - telephone
              - email
              - id
            default: telephone
          collectionFormat: multi
        - name: value
          in: query
          description: The value that need is based on status
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Incorrect information
        '404':
          description: Not found
        '500':
          description: Internal Server Error
  '/user/{userId}':
    put:
      tags:
        - user
      summary: Updated user
      description: ""
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - name: access_token
          in: query
          description: The token is required.
          required: true
          type: string
        - name: userId
          in: path
          description: The id that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid user supplied
        '404':
          description: Not found
        '500':
          description: Internal server error
  /user/desactive/{id}:
    delete:
      tags:
        - user
      summary: Desactive user
      description: ''
      operationId: desactiveUser
      produces:
        - application/json
      parameters:
        - name: access_token
          in: query
          description: The token is required.
          required: true
          type: string
        - name: id
          in: path
          description: The user id that needs to be desactive
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
        '404':
          description: Not found
        '500':
          description: Internal server error
  /user/active/{id}:
    put:
      tags:
        - user
      summary: Actived user
      description: ''
      operationId: activeUser
      produces:
        - application/json
      parameters:
        - name: access_token
          in: query
          description: The token is required.
          required: true
          type: string
        - name: id
          in: path
          description: The user id that need to be actived
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
        '404':
          description: Not found
        '500':
          description: Internal server error
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    required:
      - englishName
      - username
      - gender
      - telephone
      - password
    properties:
      _id:
        type: string
      khmerName:
        $ref: '#/definitions/PersonName'
      englishName:
        $ref: '#/definitions/PersonName'
      username:
        type: string
      email:
        type: string
      telephone:
        type: string
      password:
        type: string
      gender:
        type: string
      birthday:
        type: string
      image:
        $ref: '#/definitions/AppImage'
      tokens:
        type: array
        items:
          type: string
      setting:
        $ref: '#/definitions/Setting'
      active:
        type: boolean
        default: true
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  PersonName:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  AppImage:
    type: object
    properties:
      profileUrl:
        type: string
        default: person_placeholder
      coverUr:
        type: string
        default: photo_placeholder
  Setting:
    type: object
    properties:
      isNotify:
        type: boolean
        default: true
      language:
        type: string
        default: en-US
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
